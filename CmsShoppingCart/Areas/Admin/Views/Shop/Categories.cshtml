@model IEnumerable<CmsShoppingCart.Models.ViewModels.Shop.CategoryVM>

@{
    ViewBag.Title = "Categories";
}

<h2>Categories</h2>

<div class="new-cat">
    <input type="text" id="newcatname" />
    <p>
        <a href="#" id="newcata">Add a new category</a>
        <span class="ajax-text">
            <img src="~/Content/img/ajax-loader.gif" />
        </span>
    </p>
</div>

@if (!Model.Any())
{
    <h1 class="text-center">There are no categories!</h1>
}
else
{
    <table class="table sorting categories" id="pages">
        <tr class="home">
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr id="id_@item.Id" class="@item.Slug">
                <td>
                    @Html.EditorFor(modelItem => item.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </td>
                <td>
                    @Html.ActionLink("Delete", "DeleteCategory", new { id = item.Id }, new { @class = "delete" })
                </td>
            </tr>
        }

    </table>
}

@section Scripts{
    <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>
    <script>
 $(function () {

    /*
    *Add new category
    */
    var newCatA = $("a#newcata"); //get anchor with id = newcata
    var newCatTextInput = $("#newcatname"); //get the element with id =  newcatname 
    var ajaxText = $("span.ajax-text"); //get span with class name = ajax-text
    var table = $("table#pages tbody"); // get the table with the id = pages and his tbody as well

    newCatTextInput.keyup(function (e) {
        if (e.keyCode == 13) {//in someoane presses ENTER (13 key code) inside the textinput box
            newCatA.click();
        }
    });

     //Handling the "Add New Category Click"
     newCatA.click(function (e) {
         e.preventDefault();

         //get the value from the text input box
         var catName = newCatTextInput.val();

         //check for the approved length
         if (catName.length < 2) {
             alert("Category name must be at least 2 characters long.");
             return false;
         }

         //Show the ajax loading image if it gets so far
         ajaxText.show();

         //init the url
         var url = "/admin/shop/AddNewCategory";

         //handle the url via ajax post
         $.post(url, { catName: catName }, function (data) {

             //The AddNewCategory will return either "titletaken" or the id as a string 
             //get the response from method AddNewCategory and trim it.
             var response = data.trim();

             //check the response for "titletaken"
             if (response == "titletaken") {
                 ajaxText.html("<span class = 'alert alert-danger'>That title is taken!</span>");
                 setTimeout(function () {
                     ajaxText.fadeOut("fast", function () {
                         ajaxText.html("<img src = /Content/img/ajax-loader.gif />");
                     });
                 }, 2000);
                 return false;
             } else {
                 //check to see if the table exists. If not reload the page
                 if (!$("table#pages").length) {
                     location.reload();
                 } else {

                     //if the table is there show a success message for a while. It means tha category has been added to the database
                     ajaxText.html("<span class = 'alert alert-success'>That category has been added!</span>");
                     setTimeout(function () {
                         ajaxText.fadeOut("fast", function () {
                             ajaxText.html("<img src = /Content/img/ajax-loader.gif />");
                         });
                     }, 2000);

                     //replace the text input valu with empty space
                     newCatTextInput.val("");

                     //render the new category on the page
                     //clone the last table row and then modify it
                     var toAppend = $("table#pages tbody tr:last").clone();

                     //set the id attribute with the one gotten from the database
                     toAppend.attr("id", "id_" + data);

                     //change the name to the name of the new added category
                     toAppend.find("#item_Name").val(catName);

                     //change the link for the delete anchor
                     toAppend.find("a.delete").attr("href", "/admin/shop/DeleteCategory/" + data);

                     //append the row to the table
                     table.append(toAppend);

                     //refresh it in order for the sortable to work 
                     table.sortable("refresh");
                 }
             }

         });

     });
     /////////////////////////////////////////////////////////////


    //////////////////////////////////////////////////////////////

    /*
    *Category list sort-drag-and drop functionality
    */

    $("table#pages tbody").sortable({
        items: "tr:not(.home)",
        placeholder: "ui-state-highlight",
        update: function () {
            var ids = $("table#pages tbody").sortable("serialize");
            var url = "/Admin/Shop/ReorderCategories";

            $.post(url, ids, function (data) {
            });
        }
    });

     //////////////////////////////////////////////////////////////


     //////////////////////////////////////////////////////////////

     /*
         *Confirm page deletion
         */

     //$("a.delete").click(function () {
     //    if (!confirm("Confirm page deletion")) return false;
     //});

     $("body").on("click", "a.delete", function () {
         if (!confirm("Confirm page deletion")) {
             return false;
         }
     });//this deleting solution is for dynamically added rows.
});
    </script>

}

